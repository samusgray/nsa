// Import
// ======

@import "compass";
@import "compass/reset";
@import "susy";
@import "accoutrement";
@import "breakpoint";


// Colors
// ------

$base-colors: (
  'white': #fff,
  'black': hsl(0,0%,30%),
  'blue': #265D86,
  'green': hsl(75,100%,50%),
  'red': hsl(0,100%,50%),
);

$colors: (
  html: 'blue',
  text: 'black',
  fade: 'text' (tint: 70%),
  back: 'white',

  tagline: 'blue' (shade: 35%),

  border: 'black' (tint: 25%),
  shadow: 'black' (shade: 10%, alpha: .8),

  action: 'red',
  focus: 'action' (shade: 8%),

  yield: 'orange',
  stop: 'red',
  go: 'blue',
);

$contrasted-dark-default  : color('black');
$contrasted-light-default : color('back');


// Scale
// -----

$base-font-size: 21px;
$ratio: major-third;

$sizes: (
  logo      : scale(8),
  largest   : scale(6),
  larger    : scale(4),
  large     : scale(2),
  medium    : scale(1),
  normal    : scale(0),
  small     : scale(-1),
  smaller   : scale(-3),
  smallest  : scale(-6),
);


// Type
// ----

$base-line-height: size(large);

$rhythm-unit: rem;
$rem-with-px-fallback: false;

$relative-font-sizing: true;
$round-to-nearest-half-line: true;

$link: '&:link, &:visited';
$focus: '&:hover, &:focus, &:active';

$fonts: (
  body: (
    name: BaskervilleFS,
    type: serif,
    path: 'baskerville-%s%s-webfont',
    styles: (regular, italic, bold, bold italic),
    stack: (Baskerville, Palatino, Cambria, Georgia),
  )
);


// Layout
// ------

$susy: (
  columns: 6,
  gutters: size(medium)/size(largest),
  column-width: size(largest),
  gutter-position: inside-static,
);


// Root
// ----

@include fonts;
@include establish-baseline;
@include icon-placeholder;
@include data-icons;
@include border-box-sizing;

html {
  @extend %body;
  background: color(html) image-url('bg.jpg');
  color: color(text);
}

body {
  @include background(image-url('nsa4us.png') no-repeat scroll center size(normal));
  @include background-size(98% auto);
  padding: size(normal);
  text-align: center;

  @include breakpoint(container()) {
    @include background-size(size(largest) * 6 auto);
  }
}

p {
  margin-bottom: size(normal);

  + p { font-style: italic; }
}

a {
  #{$link} { color: color(action); }
  #{$focus} { color: color(focus); }
}

strong { font-weight: bold; }

em { font-style: italic; }

hr {
  border: 0;
  border-top: 1px dashed color(border);
  margin: size(larger);
}

.amp {
  font-style: italic;
}


// Buttons
// -------

@include keyframes(fuck-yeah) {
  0% {
    background: color('red');
    color: contrast-color(color('red'));
  }
  33% {
    background: color('white');
    color: contrast-color(color('white'));
  }
  66% {
    background: color('blue');
    color: contrast-color(color('blue'));
  }
}

%button-reset {
  @include reset-box-model;
  width: auto;
  background: none;
  color: color(text);
  font: inherit;
  cursor: pointer;
  overflow: visible;

  #{$focus} { outline: 0; }
}

%button {
  border-radius: size(smallest);
  font-weight: bold;
  min-width: span(2 static);
  padding: size(small) size(medium);
}

@mixin button(
  $bg: color(action),
  $reset: true
) {
  @extend %button;

  @if $reset {
    @extend %button-reset;
  }

  $color: contrast-color($bg);

  background: $bg;
  color: $color;

  #{$focus} {
    background: shade($bg, 15%);
  }

  &:active {
    @include box-shadow(0 1px 3px 1px color(shadow) inset);
  }

  &:disabled {
    background: desaturate($bg, 100%);
    color: rgba($color, .5);
    cursor: default;
  }
}

button {
  @include button;
}


// Forms
// -----

label {
  @include font-size(small);
  display: block;
  font-weight: bold;

  @include after(':');
}

input,
textarea {
  @include font-size(normal);
  border: 1px solid color(border);
  font-family: inherit;
  margin-bottom: size(normal);
  padding: size(smallest);
  width: 100%;

  @include input-placeholder {
    color: color(fade);
    font-style: italic;
  }
}

textarea {
  min-height: size(largest)*2;
  resize: vertical;
}

[type="submit"] {
  @include transition(all 150ms);
  float: right;
  margin-bottom: size(small);
  min-width: 100%;
  text-transform: uppercase;

  #{$focus} {
    @include animation(fuck-yeah 600ms steps(1) infinite);
    box-shadow: color(shadow) 0 0 size(smallest);
  }
}


// Banner
// ------

[role='banner'] {
  color: color(back);
  font-weight: lighter;
  padding-top: 32%;

  @include breakpoint(container()) {
    padding-top: size(normal) * 7.5;
  }
}

.logo {
  @extend %is-hidden;
}

.tagline {
  @include background(radial-gradient(
    ellipse farthest-side at bottom,
    color(tagline),
    rgba(color(tagline), 0)
  ));
  border-radius: size(smallest);
  display: inline-block;
  font-style: italic;
  letter-spacing: .03em;
  min-width: container();
  padding: size(medium) size(large) size(smallest);
  text-shadow: 0 1px 0 color(shadow);
}


// Main
// ----

$container: container();
$padding:  size(largest);

[role="main"] {
  @include container($container + $padding);
  @include box-shadow(0 0 size(normal) color(shadow));
  background: color(back) image-url('bottom.jpg') no-repeat scroll center bottom;
  border-radius: size(smallest);
  padding: $padding / 2;
  padding-bottom: size(larger) * 2;
  text-align: left;
}


// Thanks
// ------

.thanks-title {
  @include font-size(largest);
  font-style: italic;
  margin-bottom: size(normal);
  text-align: center;
}

.thanks-note {
  text-align: center;
}
